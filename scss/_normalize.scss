/* normalize */

//  Нормализация блочной модели

html,
body {
  box-sizing: border-box;

  //  Пригодится в большинстве ситуаций
  //  (когда, например, нужно будет "прижать" футер к низу сайта)
  height: 100%;

}

body {
  background-color: var(--body-bg-color, #fefefe);
  color: var(--body-text-color, #121212);
  font-family: var(--body-font-family, sans-serif);
  font-weight: var(--body-font-weight, 400);
  font-size: var(--body-font-size, 16px);
  line-height: var(--body-line-height, 1.5);
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

// Плавный скролл
html,
:has(:target) {
  scroll-behavior: smooth;
}

// Убираем внутренние отступы слева тегам списков,    у которых есть атрибут class

:where(ul, ol):where([class]) {
  padding-left: 0;
}

// Убираем внешние отступы body и двум другим тегам,
// у которых есть атрибут class
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

//  Убираем внешние отступы вертикали нужным тегам,  у которых есть атрибут class
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

//  Убираем стандартный маркер маркированному списку,    у которого есть атрибут class

:where(ul[class]) {
  list-style: none;
}


//  Упрощаем работу с изображениями
img,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

//  Наследуем свойства шрифт для полей ввода
input,
textarea,
select,
button {
  font: inherit;
}

// Приводим к единому цвету svg-элементы
svg {
  *[fill] {
    fill: currentColor;
  }

  *[stroke] {
    stroke: currentColor;
  }

  * {
    transition-property: fill, stroke;
  }
}