/* normalize */

///  Нормализация блочной модели
%box-sizing {
  box-sizing: border-box;
  ///  Пригодится в большинстве ситуаций
  ///  (когда, например, нужно будет "прижать" футер к низу сайта)
  height: 100%;
}



html {
  @extend %box-sizing;

}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/// Плавный скролл
html,
:has(:target) {
  scroll-behavior: smooth;
}

/// Убираем внутренние отступы слева тегам списков,    у которых есть атрибут class

:where(ul, ol):where([class]) {
  padding-left: 0;
}

/// Убираем внешние отступы body и двум другим тегам,
/// у которых есть атрибут class
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

///  Убираем внешние отступы вертикали нужным тегам,  у которых есть атрибут class
/// можно добавит еще теги "h1, h2, h3, h4, h5, h6"
:where(p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

///  Убираем стандартный маркер маркированному списку,    у которого есть атрибут class

:where(ul[class]) {
  list-style: none;
}


///  Упрощаем работу с изображениями
img,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

///  Наследуем свойства шрифт для полей ввода
input,
textarea,
select,
button {
  font: inherit;
}

/// Приводим к единому цвету svg-элементы
svg {
  *[fill] {
    fill: currentColor;
  }

  *[stroke] {
    stroke: currentColor;
  }

  * {
    transition-property: fill, stroke;
  }
}

body {
  @extend %box-sizing;

  background-color: var(--body-bg-color, #fefefe);
  color: var(--body-text-color, #121212);
  font-family: var(--body-font-family, sans-serif);
  font-weight: var(--body-font-weight, 400);
  font-size: var(--body-font-size, #{$baseFs});
  line-height: var(--body-line-height, 1.5);
}

/// Общие стили для всех заголовков 
%heading {
  font-family: var(--heading-font-family, inherit);
  text-transform: uppercase;
  text-align: center;
  font-weight: var(--heading-font-weight, 700);
  line-height: var(--heading-line-height, 1.5);

  :where(&):where([class]) {
    margin-block: 0;
  }
}

h1 {
  @extend %heading;
  font-size: var(--h1-font-size);

}

h2 {
  @extend %heading;
  font-size: var(--h2-font-size);
}

h3 {
  @extend %heading;
  font-size: var(--h3-font-size);
}

// h4 {
//     @extend %heading;
//    font-size: var(--h4-font-size);
// }

// h5 {
//     @extend %heading;
//    font-size: var(--h5-font-size);
// }

// h6 {
//     @extend %heading;
//    font-size: var(--h6-font-size);
// }

///  Обнуляем вертикальные внешние отступы параграфа,
///  объявляем локальную переменную для внешнего отступа вниз,
///  чтобы избежать взаимодействие с более сложным селектором
p {
  margin-block: 0;
  ///  Внешний отступ вниз для параграфа без атрибута class,
  ///  который расположен не последним среди своих соседних элементов

  &:where(:not([class]):not(:last-child)) {
    margin-bottom: .5em;
  }
}